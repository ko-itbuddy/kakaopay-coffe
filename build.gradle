plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.asciidoctor.jvm.convert' version '4.0.3'
}

group = 'org.kakaopay'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


ext {
    set('snippetsDir', file("build/generated-snippets"))
    queryDslVersion = "5.1.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //querydsl 설정 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.33.0'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    implementation 'org.springframework.kafka:spring-kafka'

// TestContainer 기본 의존성
    testImplementation "org.testcontainers:testcontainers:1.20.1"
// MySQL 의존성
    testImplementation 'org.testcontainers:mysql:1.20.1'
// Redis 의존성
    testImplementation "com.redis.testcontainers:testcontainers-redis-junit:1.6.4"
// Kafka 의존성
    testImplementation "org.testcontainers:kafka:1.20.1"
}

Provider<RegularFile> querydslDir = layout.buildDirectory.file("generated/querydsl")

sourceSets {
    main.java.srcDirs.add(querydslDir)
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}


clean.doLast {
    file(querydslDir).deleteDir()
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}


test {
    testLogging.showStandardStreams = true
}